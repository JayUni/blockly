{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
{ name_: 'Skoolbot',
  FUNCTION_NAME_PLACEHOLDER_REGEXP_: /{leCUI8hutHZI4480Dc}/g,
  RESERVED_WORDS_:
   '_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,table,term,textutils,tonumber,tostring,turtle,type,unpack,vector,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,table,math,bit32,io,file,os,debug,',
  ORDER_ATOMIC: 0,
  ORDER_HIGH: 1,
  ORDER_EXPONENTIATION: 2,
  ORDER_UNARY: 3,
  ORDER_MULTIPLICATIVE: 4,
  ORDER_ADDITIVE: 5,
  ORDER_CONCATENATION: 6,
  ORDER_RELATIONAL: 7,
  ORDER_AND: 8,
  ORDER_OR: 9,
  ORDER_NONE: 99,
  init: [Function],
  finish: [Function],
  scrubNakedValue: [Function],
  quote_: [Function],
  scrub_: [Function],
  math: {},
  math_number: [Function],
  math_arithmetic: [Function],
  math_single: [Function],
  math_constant: [Function],
  math_number_property: [Function],
  math_change: [Function],
  math_round: [Function],
  math_trig: [Function],
  math_on_list: [Function],
  math_modulo: [Function],
  math_constrain: [Function],
  math_random_int: [Function],
  math_random_float: [Function],
  math_atan2: [Function],
  logic: {},
  controls_if: [Function],
  controls_ifelse: [Function],
  logic_compare: [Function],
  logic_operation: [Function],
  logic_negate: [Function],
  logic_boolean: [Function],
  logic_null: [Function],
  logic_ternary: [Function],
  loops: {},
  CONTINUE_STATEMENT: 'goto continue\n',
  addContinueLabel: [Function],
  controls_repeat: [Function],
  controls_repeat_ext: [Function],
  controls_whileUntil: [Function],
  controls_for: [Function],
  controls_forEach: [Function],
  controls_flow_statements: [Function],
  texts: {},
  text: [Function],
  text_join: [Function],
  text_append: [Function],
  text_length: [Function],
  text_isEmpty: [Function],
  text_indexOf: [Function],
  text_charAt: [Function],
  text_getSubstring: [Function],
  text_changeCase: [Function],
  text_trim: [Function],
  text_print: [Function],
  text_prompt_ext: [Function],
  text_prompt: [Function],
  text_count: [Function],
  text_replace: [Function],
  text_reverse: [Function],
  lists: {},
  lists_create_empty: [Function],
  lists_create_with: [Function],
  lists_repeat: [Function],
  lists_length: [Function],
  lists_isEmpty: [Function],
  lists_indexOf: [Function],
  lists_getIndex: [Function],
  lists_setIndex: [Function],
  lists_getSublist: [Function],
  lists_sort: [Function],
  lists_split: [Function],
  lists_reverse: [Function],
  colour: {},
  colour_picker: [Function],
  colour_random: [Function],
  colour_rgb: [Function],
  colour_blend: [Function],
  variables: {},
  variables_get: [Function],
  variables_set: [Function],
  variablesDynamic: {},
  variables_get_dynamic: [Function],
  variables_set_dynamic: [Function],
  procedures: {},
  procedures_defreturn: [Function],
  procedures_defnoreturn: [Function],
  procedures_callreturn: [Function],
  procedures_callnoreturn: [Function],
  procedures_ifreturn: [Function],
  definitions_: [Object: null prototype] {},
  functionNames_: [Object: null prototype] {},
  variableDB_:
   { variablePrefix_: '',
     reservedDict_:
      [Object: null prototype] {
        _: true,
        __inext: true,
        assert: true,
        bit: true,
        colors: true,
        colours: true,
        coroutine: true,
        disk: true,
        dofile: true,
        error: true,
        fs: true,
        fetfenv: true,
        getmetatable: true,
        gps: true,
        help: true,
        io: true,
        ipairs: true,
        keys: true,
        loadfile: true,
        loadstring: true,
        math: true,
        native: true,
        next: true,
        os: true,
        paintutils: true,
        pairs: true,
        parallel: true,
        pcall: true,
        peripheral: true,
        print: true,
        printError: true,
        rawequal: true,
        rawget: true,
        rawset: true,
        read: true,
        rednet: true,
        redstone: true,
        rs: true,
        select: true,
        setfenv: true,
        setmetatable: true,
        sleep: true,
        string: true,
        table: true,
        term: true,
        textutils: true,
        tonumber: true,
        tostring: true,
        turtle: true,
        type: true,
        unpack: true,
        vector: true,
        write: true,
        xpcall: true,
        _VERSION: true,
        __indext: true,
        HTTP: true,
        and: true,
        break: true,
        do: true,
        else: true,
        elseif: true,
        end: true,
        false: true,
        for: true,
        function: true,
        if: true,
        in: true,
        local: true,
        nil: true,
        not: true,
        or: true,
        repeat: true,
        return: true,
        then: true,
        true: true,
        until: true,
        while: true,
        add: true,
        sub: true,
        mul: true,
        div: true,
        mod: true,
        pow: true,
        unm: true,
        concat: true,
        len: true,
        eq: true,
        lt: true,
        le: true,
        index: true,
        newindex: true,
        call: true,
        collectgarbage: true,
        _G: true,
        inpairs: true,
        load: true,
        rawlen: true,
        require: true,
        package: true,
        bit32: true,
        file: true,
        debug: true,
        '': true },
     db_: [Object: null prototype] {},
     dbReverse_: [Object: null prototype] {},
     variableMap_: { variableMap_: {}, workspace: [Object] } } }
[
    {
        "block_name": "controls_statement_ifelse",
        "structure": [
            {
                "block_name": "controls_statement_if",
                "statements": "if",
                "condition": {
                    "block_name": "logic_boolean_operator_compare",
                    "operator": "cmpe",
                    "argument": [
                        {
                            "block_name": "math_arithmetic_operator",
                            "operator": "add",
                            "argument": [
                                {
                                    "block_name": "math_number_number",
                                    "number": "1"
                                },
                                {
                                    "block_name": "math_number_number",
                                    "number": "1"
                                }
                            ]
                        },
                        {
                            "block_name": "math_number_number",
                            "number": "2"
                        }
                    ]
                },
                "branchCode": [
                    {
                        "block_name": "text_statement_print",
                        "functionName": "text_print",
                        "argument": [
                            {
                                "block_name": "math_number_number",
                                "number": "0"
                            }
                        ]
                    }
                ]
            },
            {
                "block_name": "controls_statement_else",
                "statements": "else",
                "branchCode": []
            }
        ]
    }
]
